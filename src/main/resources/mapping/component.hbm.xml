<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">

<hibernate-mapping>
    <class name="com.hyman.entity.Component" table="component" >

        <cache usage="read-write" />

        <id name="id" column="id">
            <generator class="increment" />
        </id>

        <!--
           使用版本控制（乐观锁）来处理并发，分为版本号，时间戳两种方式。但是推荐使用版本号，因为时间戳在高并发的场景下会不准确。
           该属性的配置必须放在 id 下面，不能放在其他地方。
        -->
        <version name="version" column="version" type="java.lang.Integer"/>
        <!--<timestamp name="version" column="version" />-->

         <!--
         组件映射：
         把一个实体类中的多个属性打包在一起当作另一个实体类的属性来使用，用来把类的粒度变小。
         并且 hibernate 会把这个打包的所有属性，都放在主表中，作为一张表中的字段。

         是指关联的属性是个复杂类型的持久化类，但不是实体。即数据库中没有表与该实体对应，但该类的属性又需要持久保存。
         当组件的属性不能和表中的字段简单对应的时候可以实现 org.hibernate.usertype 包下的 usertype 类，或是
         CompositeUserType 类。
         -->
         <component name="name">
              <property name="firstName" column="fr_name"></property>
              <property name="lastName" column="la_name"></property>
          </component>
    </class>
</hibernate-mapping>